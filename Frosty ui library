-- FrostyGUI.lua
local FrostyGUI = {}
FrostyGUI.__index = FrostyGUI

function FrostyGUI:CreateWindow(title)
    local window = {}
    setmetatable(window, FrostyGUI)
    window.title = title
    window.elements = {}
    window.yOffset = 60

    window.gui = Instance.new("ScreenGui", game.Players.LocalPlayer:WaitForChild("PlayerGui"))
    window.frame = Instance.new("Frame", window.gui)
    window.frame.Size = UDim2.new(0.5, 0, 0.5, 0)
    window.frame.Position = UDim2.new(0.25, 0, 0.25, 0)
    window.frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    
    local titleLabel = Instance.new("TextLabel", window.frame)
    titleLabel.Text = title
    titleLabel.Size = UDim2.new(1, 0, 0, 50)
    titleLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    
    return window
end

function FrostyGUI:AddElement(parent, element)
    element.Position = UDim2.new(0, 0, 0, parent.yOffset)
    parent.yOffset = parent.yOffset + 60
    table.insert(parent.elements, element)
end

function FrostyGUI:CreateButton(parent, text, callback)
    local button = Instance.new("TextButton", parent.frame)
    button.Text = text
    button.Size = UDim2.new(1, 0, 0, 50)
    button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    
    button.MouseButton1Click:Connect(callback)
    self:AddElement(parent, button)
    return button
end

function FrostyGUI:CreateLabel(parent, text)
    local label = Instance.new("TextLabel", parent.frame)
    label.Text = text
    label.Size = UDim2.new(1, 0, 0, 50)
    label.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    
    self:AddElement(parent, label)
    return label
end

function FrostyGUI:CreateSlider(parent, min, max, callback)
    local sliderFrame = Instance.new("Frame", parent.frame)
    sliderFrame.Size = UDim2.new(1, 0, 0, 50)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    
    local slider = Instance.new("TextButton", sliderFrame)
    slider.Size = UDim2.new(0, 10, 1, 0)
    slider.Position = UDim2.new(0, 0, 0, 0)
    slider.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
    
    local dragging = false
    
    local function updateSlider(input)
        local relativePos = math.clamp((input.Position.X - sliderFrame.AbsolutePosition.X) / sliderFrame.AbsoluteSize.X, 0, 1)
        slider.Position = UDim2.new(relativePos, 0, 0, 0)
        local value = min + (max - min) * relativePos
        callback(value)
    end

    slider.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            updateSlider(input)
        end
    end)
    
    slider.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    slider.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            updateSlider(input)
        end
    end)
    
    self:AddElement(parent, sliderFrame)
    return sliderFrame
end

function FrostyGUI:CreateDropdown(parent, options, callback)
    local dropdownFrame = Instance.new("Frame", parent.frame)
    dropdownFrame.Size = UDim2.new(1, 0, 0, 50)
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    
    local dropdown = Instance.new("TextButton", dropdownFrame)
    dropdown.Text = "Select an option"
    dropdown.Size = UDim2.new(1, 0, 1, 0)
    dropdown.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
    
    local optionList = Instance.new("Frame", dropdownFrame)
    optionList.Size = UDim2.new(1, 0, #options * 50, 0)
    optionList.Position = UDim2.new(0, 0, 1, 0)
    optionList.Visible = false
    
    for i, option in ipairs(options) do
        local optionButton = Instance.new("TextButton", optionList)
        optionButton.Text = option
        optionButton.Size = UDim2.new(1, 0, 0, 50)
        optionButton.Position = UDim2.new(0, 0, (i - 1) * 50, 0)
        
        optionButton.MouseButton1Click:Connect(function()
            dropdown.Text = option
            optionList.Visible = false
            callback(option)
        end)
    end
    
    dropdown.MouseButton1Click:Connect(function()
        optionList.Visible = not optionList.Visible
    end)
    
    self:AddElement(parent, dropdownFrame)
    return dropdownFrame
end

return FrostyGUI
